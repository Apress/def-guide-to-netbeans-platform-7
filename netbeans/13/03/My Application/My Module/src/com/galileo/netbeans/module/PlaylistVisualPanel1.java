/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.galileo.netbeans.module;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openide.util.NbBundle;

public final class PlaylistVisualPanel1 extends JPanel implements DocumentListener {

   public static final String PROP_PLAYLIST_NAME = "playlistName";
   public static final String PROP_GENRE         = "genre";
   public static final String PROP_DESCRIPTION   = "description";
   public static final String PROP_IMAGE_PATH    = "imagePath";
   
   /** Creates new form PlaylistVisualPanel1 */
   public PlaylistVisualPanel1() {
      initComponents();
      playlistName.getDocument().addDocumentListener(this);
      imagePath.getDocument().addDocumentListener(this);
   }

   @Override
   public String getName() {
      return NbBundle.getBundle(PlaylistWizardPanel1.class).getString("Panel1.Name");
   }

   public String getPlaylistName() {
      return playlistName.getText();
   }
   
   public String getGenre() {
      return (String)genre.getSelectedItem();
   }
   
   public String getDescription() {
      return description.getText();
   }

   public String getImagePath() {
      return imagePath.getText();
   }

   @Override
   public void changedUpdate( DocumentEvent e ) {
      if (playlistName.getDocument() == e.getDocument()) {
         firePropertyChange(PROP_PLAYLIST_NAME, 0, 1);
      } else if(imagePath.getDocument() == e.getDocument()) {
         firePropertyChange(PROP_IMAGE_PATH, 0, 1);
      }
   }
   
   @Override
   public void insertUpdate( DocumentEvent e ) {
      if (playlistName.getDocument() == e.getDocument()) {
         firePropertyChange(PROP_PLAYLIST_NAME, 0, 1);
      } else if(imagePath.getDocument() == e.getDocument()) {
         firePropertyChange(PROP_IMAGE_PATH, 0, 1);
      }
   }
   
   @Override
   public void removeUpdate( DocumentEvent e ) {
      if (playlistName.getDocument() == e.getDocument()) {
         firePropertyChange(PROP_PLAYLIST_NAME, 0, 1);
      } else if(imagePath.getDocument() == e.getDocument()) {
         firePropertyChange(PROP_IMAGE_PATH, 0, 1);
      }
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
      // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel2 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      preview = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      genre = new javax.swing.JComboBox();
      playlistName = new javax.swing.JTextField();
      jScrollPane1 = new javax.swing.JScrollPane();
      description = new javax.swing.JTextArea();
      jLabel5 = new javax.swing.JLabel();
      imagePath = new javax.swing.JTextField();
      search = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();

      org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(PlaylistVisualPanel1.class, "PlaylistVisualPanel1.jLabel2.text")); // NOI18N

      org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(PlaylistVisualPanel1.class, "PlaylistVisualPanel1.jLabel4.text")); // NOI18N

      preview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

      org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(PlaylistVisualPanel1.class, "PlaylistVisualPanel1.jLabel3.text")); // NOI18N

      genre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trance", "House", "Pop", "Rock" }));

      description.setColumns(20);
      description.setRows(5);
      jScrollPane1.setViewportView(description);

      org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(PlaylistVisualPanel1.class, "PlaylistVisualPanel1.jLabel5.text")); // NOI18N

      org.openide.awt.Mnemonics.setLocalizedText(search, org.openide.util.NbBundle.getMessage(PlaylistVisualPanel1.class, "PlaylistVisualPanel1.search.text")); // NOI18N
      search.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchActionPerformed(evt);
         }
      });

      org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PlaylistVisualPanel1.class, "PlaylistVisualPanel1.jLabel1.text")); // NOI18N

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 377, Short.MAX_VALUE)
         .addGroup(layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jLabel1)
            .addGap(43, 43, 43)
            .addComponent(playlistName, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addGroup(layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jLabel2)
            .addGap(41, 41, 41)
            .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addGroup(layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jLabel3)
            .addGap(6, 6, 6)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addGroup(layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(jLabel4)
            .addGap(54, 54, 54)
            .addComponent(imagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(6, 6, 6)
            .addComponent(search))
         .addGroup(layout.createSequentialGroup()
            .addGap(84, 84, 84)
            .addComponent(jLabel5))
         .addGroup(layout.createSequentialGroup()
            .addGap(84, 84, 84)
            .addComponent(preview, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 322, Short.MAX_VALUE)
         .addGroup(layout.createSequentialGroup()
            .addGap(11, 11, 11)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel1)
               .addComponent(playlistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(6, 6, 6)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel2)
               .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(6, 6, 6)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel3)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(6, 6, 6)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel4)
               .addGroup(layout.createSequentialGroup()
                  .addGap(1, 1, 1)
                  .addComponent(imagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(search))
            .addGap(6, 6, 6)
            .addComponent(jLabel5)
            .addGap(6, 6, 6)
            .addComponent(preview, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
   }// </editor-fold>//GEN-END:initComponents

   private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
      JFileChooser chooser = new JFileChooser(imagePath.getText());
      chooser.setFileFilter(new FileNameExtensionFilter("JPG, GIF, PNG Bilder", "jpg", "gif", "png"));
      
      if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
         preview.setIcon(new ImageIcon(chooser.getSelectedFile().getAbsolutePath()));
         imagePath.setText(chooser.getSelectedFile().getAbsolutePath());
      }
}//GEN-LAST:event_searchActionPerformed
      // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JTextArea description;
   private javax.swing.JComboBox genre;
   private javax.swing.JTextField imagePath;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTextField playlistName;
   private javax.swing.JLabel preview;
   private javax.swing.JButton search;
   // End of variables declaration//GEN-END:variables
}
