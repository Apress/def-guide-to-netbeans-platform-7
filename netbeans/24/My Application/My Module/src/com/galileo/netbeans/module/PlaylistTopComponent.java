/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.galileo.netbeans.module;

import java.awt.BorderLayout;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.TreeTableView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Index;
import org.openide.nodes.Node;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//com.galileo.netbeans.module//Playlist//EN",
autostore = false)
@TopComponent.Description(preferredID = "PlaylistTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.galileo.netbeans.module.PlaylistTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_PlaylistAction",
preferredID = PlaylistTopComponent.PREFERRED_ID)
public final class PlaylistTopComponent extends TopComponent implements ExplorerManager.Provider {
   
   public static final String PREFERRED_ID = "PlaylistTopComponent";

   private ExplorerManager manager = new ExplorerManager();
   private TreeTableView playlist = new TreeTableView();
   private static Index.ArrayChildren container = new Index.ArrayChildren();

   public PlaylistTopComponent() {
      initComponents();
      setName(NbBundle.getMessage(PlaylistTopComponent.class, "CTL_PlaylistTopComponent"));
      setToolTipText(NbBundle.getMessage(PlaylistTopComponent.class, "HINT_PlaylistTopComponent"));

      playlist.setRootVisible(false);
      manager.setRootContext(new AbstractNode(container));
      
      associateLookup(ExplorerUtils.createLookup(manager, getActionMap()));
   }
   
   public static void addFile(Node n) {
      container.add(new Node[]{n});
      WindowManager.getDefault().findTopComponent(PlaylistTopComponent.PREFERRED_ID).open();
   }

   @Override
   public ExplorerManager getExplorerManager() {
      return manager;
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
      // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jPanel1 = new javax.swing.JPanel();

      jPanel1.setLayout(new java.awt.BorderLayout());
      jPanel1.add(playlist, BorderLayout.CENTER);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
      );
   }// </editor-fold>//GEN-END:initComponents

      // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JPanel jPanel1;
   // End of variables declaration//GEN-END:variables
   @Override
   public void componentOpened() {
      // TODO add custom code on component opening
   }

   @Override
   public void componentClosed() {
      // TODO add custom code on component closing
   }

   void writeProperties(java.util.Properties p) {
      // better to version settings since initial version as advocated at
      // http://wiki.apidesign.org/wiki/PropertyFiles
      p.setProperty("version", "1.0");
      // TODO store your settings
   }

   void readProperties(java.util.Properties p) {
      String version = p.getProperty("version");
      // TODO read your settings according to their version
   }
}
